# This workflow do the following:
# 1. Check if current date is below 1st March 2025 (if you are planning to release V5 in different date, change this in check-date job)
# 2. Count new translation entries in branch v5 and update "__status" in files
# 3. Notify "translations" channel on Discord if there are new translation entries
# 4. Notify "translations" channel on Discord weekly about percentage of translations

# To integrate this workflow with Discord, you need to create a webhook for the "translations" channel.
# You can find the webhook URL in the channel settings.
# Then add the webhook URL as "TRANSLATIONS_WEBHOOK_URL" secret in your repository settings. That's it.

# Change this name if you want
name: Calculcate percentage of translations

on:
  push:
    branches:
      # Only run on v5 branch
      - translations
    paths:
      # When new translation entries are added to base file
      - "packages/docs/src/translation/en.json"
  schedule:
    # Run weekly at 7pm on Monday. I think it should be UTC. Need to verify that
    # Change this time as needed. I just selected most optimal time for different time zones
    - cron: '0 19 * * 1'
  # This lets you manually trigger the workflow
  workflow_dispatch:

jobs:

  # Quit entire workflow if current date is above 1st march 2025
  check-date:
    runs-on: ubuntu-latest
    outputs:
      should_continue: ${{ steps.check_date.outputs.should_continue }}
    steps:
      - name: Check date
        id: check_date
        run: |
          CURRENT_DATE=$(date +%Y-%m-%d)
          echo "current_date=$CURRENT_DATE" >> $GITHUB_OUTPUT
          # Change this date as needed
          if [[ $CURRENT_DATE > "2025-03-01" ]]; then
            echo "Date is above 1st March 2025. Quitting workflow."
            echo "should_continue=false" >> $GITHUB_OUTPUT
          else
            echo "should_continue=true" >> $GITHUB_OUTPUT
          fi
            
  detect-new-translations:
    # Run this job only if date is below 1st march 2025 and it's not scheduled
    needs: check-date
    if: needs.check-date.outputs.should_continue == 'true' && github.event_name != 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Print branch name (For debugging)
        run: echo ${{ github.ref }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Remember to set proper branch here
          ref: translations
          fetch-depth: 2

      - name: Count new translation entries
        id: count_entries
        run: |
          # Compare previous and current JSON, count only new keys
          NEW_ENTRIES=$(git diff HEAD^ HEAD -- packages/docs/src/translation/en.json | grep -E '^\+[[:space:]]*"' | grep -v '^\+{' | wc -l)

          echo "New translation entries: $NEW_ENTRIES"
          echo "new_entries=$NEW_ENTRIES" >> $GITHUB_OUTPUT

          if [ "$NEW_ENTRIES" -gt 0 ]; then
            echo "New translation entries detected. Proceeding with Discord notification."
            echo "detected_changes=true" >> $GITHUB_OUTPUT
          else
            echo "No new translation entries detected. Skipping Discord notification."
            echo "detected_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Update "__status" in files
        if: steps.count_entries.outputs.detected_changes == 'true'
        run: bun run packages/docs/src/translation/percentage.ts

      - name: Create Pull Request
        if: steps.count_entries.outputs.detected_changes == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          # Probably you will need to change GITHUB_TOKEN or set different user for this step
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Calculated percentage of translations"
          title: "Calculated percentage of translations"
          body: "Calculated percentage of translations"

      - name: Discord Webhook Action
        if: steps.count_entries.outputs.detected_changes == 'true'
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.TRANSLATIONS_WEBHOOK_URL }}
          # Read documentation about message formatting if you want to mention server roles or users
          # https://discord.com/developers/docs/reference#message-formatting
          # You need to use ID to mention, e.g. <@102044211276169216>
          # use ${{ steps.count_entries.outputs.new_entries }} to get the number of new entries
          content: |
            ðŸ‘‹  Help us improve! New content awaits your translation

            ðŸ“œ  Files are located here: 
              
            https://github.com/saadeghi/daisyui/tree/v5/packages/docs/src/translation

  # Weekly summary of translations in Discord (This job should work fine)
  weekly-summary:
    needs: check-date
    # Run this job only if date is below 1st march 2025, it's not scheduled and it's not a workflow dispatch
    if: needs.check-date.outputs.should_continue == 'true' && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # Remember to set proper branch here
          ref: translations
          fetch-depth: 1

      # Following steps are just for debugging (remove them if you want)
      - name: Print branch name
        run: echo ${{ github.ref }}
      - name: Print current directory
        run: pwd
      - name: Print tree
        run: tree
      - name: List files
        run: ls

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Run script to calculate percentage of translations
        id: calculate_percentage
        run: |
          OUTPUT=$(bun run packages/docs/src/translation/percentage.ts -s)
          echo "percentage=$OUTPUT" >> $GITHUB_OUTPUT

      - name: Print percentage
        run: echo ${{ steps.calculate_percentage.outputs.percentage }}
          
      - name: Determine one most needed translation
        id: most_needed
        run: |
          # Extract the percentages and find the one with the lowest percentage
          PERCENTAGE_STRING="${{ steps.calculate_percentage.outputs.percentage }}"
          MOST_NEEDED=$(echo "$PERCENTAGE_STRING" | tr ',' '\n' | awk '{print $1, $2}' | sort -k2,2n | head -n 1)
          echo "most_needed=$MOST_NEEDED" >> $GITHUB_OUTPUT

      - name: Print most needed translation
        run: echo ${{ steps.most_needed.outputs.most_needed }}

      - name: Send message to Discord
        if: '[ -n "${{ steps.calculate_percentage.outputs.percentage }}" ]'
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.TRANSLATIONS_WEBHOOK_URL }}
          # Empty lines between messages are treated as empty lines
          content: |

            ðŸ—“  Weekly Summary of Translation Progress

            ðŸ“Š  ${{ steps.calculate_percentage.outputs.percentage }}

            ðŸ”¥  Most needed translation: ${{ steps.most_needed.outputs.most_needed }}
